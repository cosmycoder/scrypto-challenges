# To test the DEX the other accounts created need to have some of the test tokens that were created by account 1. This
# transaction manifest file contains the instructions used to deposit some test tokens into the other accounts.

# We need to clone the auth badge of account 1 as many times as we will be doing the withdraw since the bucket refs are
# dropped after method calls. Therefore, we need to have as many badge bucket refs as withdrawls we will be making
CLONE_BUCKET_REF BucketRef(1u32) BucketRef("cardano_badge");
CLONE_BUCKET_REF BucketRef("cardano_badge") BucketRef("xrp_badge");
CLONE_BUCKET_REF BucketRef("xrp_badge") BucketRef("quant_badge");

# Each of the accounts will be given 100,000 of each of the tokens. So, we will be withdrawing 300,000 of each of the 
# tokens to fund all three of the accounts
CALL_METHOD Address("0293c502780e23621475989d707cd8128e4506362e5fed6ac0c00a") "withdraw" Decimal("300000") Address("031773788de8e4d2947d6592605302d4820ad060ceab06eb2d4711") BucketRef(1u32);
CALL_METHOD Address("0293c502780e23621475989d707cd8128e4506362e5fed6ac0c00a") "withdraw" Decimal("300000") Address("03de9068895b2f071d39e88c18bcb9f1968499e6948277ef445783") BucketRef("cardano_badge");
CALL_METHOD Address("0293c502780e23621475989d707cd8128e4506362e5fed6ac0c00a") "withdraw" Decimal("300000") Address("0350451716768d676350e154cf3e9538f8f4c434a47be61a055b38") BucketRef("xrp_badge");
CALL_METHOD Address("0293c502780e23621475989d707cd8128e4506362e5fed6ac0c00a") "withdraw" Decimal("300000") Address("03fdd7e7e7889472cd80e030c2251080a078562ed487ca3fa56fbd") BucketRef("quant_badge");

# Creating buckets of the tokens and depositing them into account 2
TAKE_FROM_WORKTOP Decimal("100000") Address("031773788de8e4d2947d6592605302d4820ad060ceab06eb2d4711") Bucket("bitcoin_bucket2");
TAKE_FROM_WORKTOP Decimal("100000") Address("03de9068895b2f071d39e88c18bcb9f1968499e6948277ef445783") Bucket("cardano_bucket2");
TAKE_FROM_WORKTOP Decimal("100000") Address("0350451716768d676350e154cf3e9538f8f4c434a47be61a055b38") Bucket("xrp_bucket2");
TAKE_FROM_WORKTOP Decimal("100000") Address("03fdd7e7e7889472cd80e030c2251080a078562ed487ca3fa56fbd") Bucket("quant_bucket2");

CALL_METHOD Address("0236ca00316c8eb5ad51b0cb5e3f232cb871803a85ec3847b36bb4") "deposit_batch" Vec<Bucket>(Bucket("bitcoin_bucket2"), Bucket("cardano_bucket2"), Bucket("xrp_bucket2"), Bucket("quant_bucket2"));

# Creating buckets of the tokens and depositing them into account 3
TAKE_FROM_WORKTOP Decimal("100000") Address("031773788de8e4d2947d6592605302d4820ad060ceab06eb2d4711") Bucket("bitcoin_bucket3");
TAKE_FROM_WORKTOP Decimal("100000") Address("03de9068895b2f071d39e88c18bcb9f1968499e6948277ef445783") Bucket("cardano_bucket3");
TAKE_FROM_WORKTOP Decimal("100000") Address("0350451716768d676350e154cf3e9538f8f4c434a47be61a055b38") Bucket("xrp_bucket3");
TAKE_FROM_WORKTOP Decimal("100000") Address("03fdd7e7e7889472cd80e030c2251080a078562ed487ca3fa56fbd") Bucket("quant_bucket3");

CALL_METHOD Address("0236ca00316c8eb5ad51b0cb5e3f232cb871803a85ec3847b36bb4") "deposit_batch" Vec<Bucket>(Bucket("bitcoin_bucket3"), Bucket("cardano_bucket3"), Bucket("xrp_bucket3"), Bucket("quant_bucket3"));

# Creating buckets of the tokens and depositing them into account 4
TAKE_FROM_WORKTOP Decimal("100000") Address("031773788de8e4d2947d6592605302d4820ad060ceab06eb2d4711") Bucket("bitcoin_bucket4");
TAKE_FROM_WORKTOP Decimal("100000") Address("03de9068895b2f071d39e88c18bcb9f1968499e6948277ef445783") Bucket("cardano_bucket4");
TAKE_FROM_WORKTOP Decimal("100000") Address("0350451716768d676350e154cf3e9538f8f4c434a47be61a055b38") Bucket("xrp_bucket4");
TAKE_FROM_WORKTOP Decimal("100000") Address("03fdd7e7e7889472cd80e030c2251080a078562ed487ca3fa56fbd") Bucket("quant_bucket4");

CALL_METHOD Address("0236ca00316c8eb5ad51b0cb5e3f232cb871803a85ec3847b36bb4") "deposit_batch" Vec<Bucket>(Bucket("bitcoin_bucket4"), Bucket("cardano_bucket4"), Bucket("xrp_bucket4"), Bucket("quant_bucket4"));