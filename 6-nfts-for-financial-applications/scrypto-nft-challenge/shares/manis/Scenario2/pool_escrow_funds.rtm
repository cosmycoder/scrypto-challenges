# lock fees
CALL_METHOD ComponentAddress("system_sim1qsqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqs9fh54n") "lock_fee" Decimal("100");


# ############ transfer an owner nft from account 1 to account 2
# CALL_METHOD ComponentAddress("{account_address_1}") "withdraw_by_amount" Decimal("1") ResourceAddress("{owner_badge_resource_address}");
# # puts that nft into a bucket
# TAKE_FROM_WORKTOP ResourceAddress("{owner_badge_resource_address}") Bucket("owner_nft_bucket_transfer_1");
# # puts bucket into account 2
# CALL_METHOD ComponentAddress("{account_address_1}") "deposit" Bucket("owner_nft_bucket_transfer_1");


# ############ transfer an owner nft from account 1 to account 3
# CALL_METHOD ComponentAddress("{account_address_1}") "withdraw_by_amount" Decimal("1") ResourceAddress("{owner_badge_resource_address}");
# # puts that nft into a bucket
# TAKE_FROM_WORKTOP ResourceAddress("{owner_badge_resource_address}") Bucket("owner_nft_bucket_transfer_2");
# # puts bucket into account 3
# CALL_METHOD ComponentAddress("{account_address_1}") "deposit" Bucket("owner_nft_bucket_transfer_2");


############################# USER 1 ####################################
# take nft to provide as proof
CALL_METHOD ComponentAddress("{account_address_1}") "withdraw_by_amount" Decimal("1") ResourceAddress("{owner_badge_resource_address}");
# puts that nft into a bucket
TAKE_FROM_WORKTOP ResourceAddress("{owner_badge_resource_address}") Bucket("owner_nft_bucket_1");
# create a proof from the bucket
CREATE_PROOF_FROM_BUCKET
    Bucket("owner_nft_bucket_1")
    Proof("owner_nft_proof_1");
    # you can now pass this proof and bucketto a method/function


############################# USER 2 ####################################
# take nft to provide as proof
CALL_METHOD ComponentAddress("{account_address_1}") "withdraw_by_amount" Decimal("1") ResourceAddress("{owner_badge_resource_address}");
# puts that nft into a bucket
TAKE_FROM_WORKTOP ResourceAddress("{owner_badge_resource_address}") Bucket("owner_nft_bucket_2");
# create a proof from the bucket
CREATE_PROOF_FROM_BUCKET
    Bucket("owner_nft_bucket_2")
    Proof("owner_nft_proof_2");
    # you can now pass this proof and bucketto a method/function


############################# USER 3 ####################################
# take nft to provide as proof
CALL_METHOD ComponentAddress("{account_address_1}") "withdraw_by_amount" Decimal("1") ResourceAddress("{owner_badge_resource_address}");
# puts that nft into a bucket
TAKE_FROM_WORKTOP ResourceAddress("{owner_badge_resource_address}") Bucket("owner_nft_bucket_3");
# create a proof from the bucket
CREATE_PROOF_FROM_BUCKET
    Bucket("owner_nft_bucket_3")
    Proof("owner_nft_proof_3");
    # you can now pass this proof and bucketto a method/function


############ account 1 send funds to escrow
CALL_METHOD ComponentAddress("{account_address_1}") "withdraw_by_amount" Decimal("500") ResourceAddress("resource_sim1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzqu57yag")
TAKE_FROM_WORKTOP ResourceAddress("resource_sim1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzqu57yag") Bucket("owner_nft_bucket_1");

############ account 2 send funds to escrow
CALL_METHOD ComponentAddress("{account_address_1}") "withdraw_by_amount" Decimal("500") ResourceAddress("resource_sim1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzqu57yag")
TAKE_FROM_WORKTOP ResourceAddress("resource_sim1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzqu57yag") Bucket("owner_nft_bucket_2");

############ account 3 send funds to escrow
CALL_METHOD ComponentAddress("{account_address_1}") "withdraw_by_amount" Decimal("500") ResourceAddress("resource_sim1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzqu57yag")
TAKE_FROM_WORKTOP ResourceAddress("resource_sim1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzqu57yag") Bucket("owner_nft_bucket_3");


# calling the pool_escrow_funds method pooling 1500 XRD between 3 people
CALL_METHOD ComponentAddress("{component_address}")
    "pool_escrow_funds"
    Decimal("1500")
    ResourceAddress("resource_sim1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzqu57yag")
    Vec<Proof("owner_nft_proof_1"), Proof("owner_nft_proof_2"), Proof("owner_nft_proof_3")>
    Vec<Bucket("owner_nft_bucket_1"), Bucket("owner_nft_bucket_2"), Bucket("owner_nft_bucket_3")>;



# return buckets to worktop
RETURN_TO_WORKTOP Bucket("owner_nft_bucket_1");
RETURN_TO_WORKTOP Bucket("owner_nft_bucket_2");
RETURN_TO_WORKTOP Bucket("owner_nft_bucket_3");




# because we withdrew tokens from our account and they are still on the
# worktop, we have to deposit them back into your account
CALL_METHOD ComponentAddress     
    ("{account_address_1}")
    "deposit_batch"
    Expression("ENTIRE_WORKTOP");
