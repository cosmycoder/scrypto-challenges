# Taking the Loan NFT with the transient resource
CALL_METHOD ComponentAddress("${ACC_ADDRESS1}") "create_proof_by_amount" Decimal("1") ResourceAddress("${PROOF}");
POP_FROM_AUTH_ZONE Proof("proof1");
CALL_METHOD ComponentAddress("${COMPONENT}") "withdraw_loan_nft" Proof("proof1");

# Auction Repay
CALL_METHOD ComponentAddress("${ACC_ADDRESS1}") "create_proof_by_amount" Decimal("1") ResourceAddress("${PROOF}");
POP_FROM_AUTH_ZONE Proof("proof2");
# Create proof of transient token
TAKE_FROM_WORKTOP_BY_AMOUNT Decimal("1.0") ResourceAddress("${TRANSIENT_TOKEN}") Bucket("bucket1");
CREATE_PROOF_FROM_BUCKET Bucket("bucket1") Proof("proof3");

CALL_METHOD ComponentAddress("${ACC_ADDRESS1}") "withdraw_by_amount" Decimal("1090") ResourceAddress("${USD}");
TAKE_FROM_WORKTOP_BY_AMOUNT Decimal("1090") ResourceAddress("${USD}") Bucket("bucket2");
CALL_METHOD ComponentAddress("${COMPONENT}") "auction_repay" Proof("proof2") NonFungibleId("${LOAN_AUC}") ResourceAddress("${USD}") Proof("proof3") Bucket("bucket2");

# Redeem collateral
CALL_METHOD ComponentAddress("${ACC_ADDRESS1}") "create_proof_by_amount" Decimal("1") ResourceAddress("${PROOF}");
POP_FROM_AUTH_ZONE Proof("proof4");
CALL_METHOD ComponentAddress("${COMPONENT}") "redeem_auction_collateral" Proof("proof4") ResourceAddress("030000000000000000000000000000000000000000000000000004") Decimal("3000");

# Returning collateral
TAKE_FROM_WORKTOP_BY_AMOUNT Decimal("1000") ResourceAddress("030000000000000000000000000000000000000000000000000004") Bucket("bucket3");
# Bucket 1 is the transient token
CALL_METHOD ComponentAddress("${COMPONENT}") "return_collateral" Bucket("bucket3") Bucket("bucket1");
CALL_METHOD_WITH_ALL_RESOURCES ComponentAddress("${ACC_ADDRESS1}") "deposit_batch";